#!/bin/bash
clear
apt-get install lolcat -y &>/dev/null
apt-get install figlet -y &>/dev/null
apt-get install curl -y &>/dev/null
apt install git -y &>/dev/null 
apt install figlet boxes -y &>/dev/null
cd $HOME
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvoc√™ precisa executar como root\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 0

#================================================================================#
# SCRIPT DE INSTALA√á√ÉO SSH-PLUS - VERS√ÉO MODERNIZADA
# Autor: Seu Nome/Comunidade
# Descri√ß√£o: Instala e configura o ambiente SSH-PLUS.
#================================================================================#

# --- PREVEN√á√ÉO DE ERROS ---
# Sai imediatamente se um comando falhar.
set -e

# --- VARI√ÅVEIS DE COR E ESTILO ---
C_OFF='\033[0m'
C_RED='\033[0;31m'
C_GREEN='\033[0;32m'
C_YELLOW='\033[0;33m'
C_BLUE='\033[0;34m'
C_PURPLE='\033[0;35m'
C_CYAN='\033[0;36m'
C_WHITE='\033[0;37m'
C_BOLD='\033[1m'
C_DIM='\033[2m'

# --- FUN√á√ïES DE LOG (MENSAGENS PADRONIZADAS) ---
log_info() {
    echo -e "${C_BOLD}${C_BLUE}[INFO]${C_OFF} $1"
}
log_success() {
    echo -e "${C_BOLD}${C_GREEN}[OK]${C_OFF} $1"
}
log_warning() {
    echo -e "${C_BOLD}${C_YELLOW}[AVISO]${C_OFF} $1"
}
log_error() {
    echo -e "${C_BOLD}${C_RED}[ERRO]${C_OFF} $1"
    exit 1
}
print_separator() {
    printf "%*s\n" "$(tput cols)" "" | tr ' ' '‚îÄ' | lolcat
}

# --- FUN√á√ÉO DA BARRA DE PROGRESSO (L√ìGICA ORIGINAL COM VISUAL MELHORADO) ---
run_with_progress() {
    local task_name="$1"
    shift
    local command_to_run="$@"
    
    (
        [[ -e $HOME/fim ]] && rm -f $HOME/fim
        $command_to_run >/dev/null 2>&1
        touch $HOME/fim
    ) &
    
    local pid=$!
    local spin='‚†ã‚†ô‚†π‚†∏‚†º‚†¥‚†¶‚†ß‚†á‚†è'
    
    tput civis # Oculta o cursor
    echo -ne "${C_PURPLE}${C_BOLD}$task_name... ${C_OFF}"
    while kill -0 $pid 2>/dev/null; do
        local i=$(( (i+1) % ${#spin} ))
        echo -ne "${C_CYAN}${spin:$i:1}${C_OFF}"
        sleep 0.1
        echo -ne "\b"
    done
    tput cnorm # Exibe o cursor
    
    if [[ -e $HOME/fim ]]; then
        rm -f $HOME/fim
        echo -e "${C_GREEN}${C_BOLD}Conclu√≠do!${C_OFF}"
    else
        echo -e "${C_RED}${C_BOLD}Falhou!${C_OFF}"
    fi
}

# --- VERIFICA√á√ïES INICIAIS ---
check_root() {
    if [[ "$(whoami)" != "root" ]]; then
        log_error "Voc√™ precisa executar este script como usu√°rio root."
    fi
}

# --- FUN√á√ïES DE INSTALA√á√ÉO (L√ìGICA ORIGINAL) ---
install_dependencies() {
    log_info "Verificando e instalando depend√™ncias essenciais..."
    local pkgs=("lolcat" "figlet" "curl" "git" "boxes" "bc" "screen" "nano" "unzip" "lsof" "net-tools" "dos2unix" "nload" "jq" "python3" "python3-pip" "python" "at" "shc")
    
    # Esconde a sa√≠da para um visual mais limpo
    for pkg in "${pkgs[@]}"; do
        if ! dpkg -l | grep -q " $pkg "; then
            apt-get install -y "$pkg" &>/dev/null
        fi
    done
    
    # Instala o speedtest-cli via pip
    pip install speedtest-cli &>/dev/null
    log_success "Depend√™ncias verificadas e instaladas."
}

define_obfuscated_vars() {
    # L√≥gica original de ofusca√ß√£o de vari√°veis. N√£o alterar.
    _lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
    _Ink=$(echo '/3√óu3#s87r/l32o4√óc1a√ól1/83√ól24√ói0b√ó' | sed -e 's/[^a-z/]//ig')
    _1nk=$(echo '/3√óu3#s√ó87r/83√ól2√ó4√ói0b√ó' | sed -e 's/[^a-z/]//ig')
}

verify_key() {
    log_info "Verificando a chave de instala√ß√£o..."
    rm -f $_Ink/list &>/dev/null
    wget -P $_Ink https://raw.githubusercontent.com/sofrenoob/Gggggg/refs/heads/main/h/sshplus/Modulos/list &>/dev/null
    
    if [[ ! -e "$_Ink/list" ]]; then
        log_error "Chave de instala√ß√£o inv√°lida ou falha no download. Abortando."
    fi
    log_success "Chave validada com sucesso."
}

prompt_user_database() {
    if [[ -f "$HOME/usuarios.db" ]]; then
        clear
        figlet "SSH-PLUS" | lolcat
        print_separator
        echo -e "${C_YELLOW}${C_BOLD}Foi detectada uma base de dados de usu√°rios existente!${C_OFF}" | boxes -d stone -p a1c
        echo ""
        log_warning "Arquivo encontrado: ${C_CYAN}$HOME/usuarios.db${C_OFF}"
        echo -e "Este arquivo cont√©m os dados de login, senha, limite e validade dos seus usu√°rios."
        echo ""
        echo -e " ${C_CYAN}[1]${C_OFF} ${C_BOLD}Manter os dados atuais (Recomendado).${C_OFF}"
        echo -e " ${C_CYAN}[2]${C_OFF} ${C_BOLD}Apagar e criar uma nova base de dados.${C_OFF}"
        echo ""
        read -p "Escolha uma op√ß√£o [1]: " optiondb
        optiondb=${optiondb:-1}
    else
        # Se n√£o existe, cria a base de dados
        awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
    fi

    [[ "$optiondb" = '2' ]] && {
        log_info "Criando uma nova base de dados de usu√°rios."
        awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
    }
}

download_core_files() {
    log_info "Baixando arquivos de configura√ß√£o e m√≥dulos..."
    # L√≥gica original de downloads
    echo "/bin/menu" >/bin/h && chmod +x /bin/h &>/dev/null
    wget -q https://raw.githubusercontent.com/sofrenoob/Gggggg/refs/heads/main/h/sshplus/Modulos/versao -O $HOME/versao
    wget -q https://raw.githubusercontent.com/sofrenoob/Gggggg/refs/heads/main/h/sshplus/Modulos/v2raymanager -O $HOME/v2raymanager
    wget -q https://raw.githubusercontent.com/sofrenoob/Gggggg/refs/heads/main/h/sshplus/Modulos/botteste.sh -O $HOME/botteste.sh
    chmod +x $HOME/v2raymanager $HOME/botteste.sh
    
    mkdir -p $HOME/BOT
    wget -q https://raw.githubusercontent.com/sofrenoob/Gggggg/refs/heads/main/h/sshplus/Modulos/ShellBot.sh -O $HOME/BOT/ShellBot.sh
    chmod +x $HOME/BOT/ShellBot.sh
    
    mkdir -p /etc/rec
    wget -q https://raw.githubusercontent.com/sofrenoob/Gggggg/refs/heads/main/h/sshplus/Modulos/licence -O /etc/rec/licence
    chmod +x /etc/rec/licence
    log_success "Arquivos principais baixados."
}

optimize_python_env() {
    # L√≥gica original de otimiza√ß√£o do Python
    apt-get install -y python python2 python3.6 python3.7 python3.8 python3.9 pip socat &>/dev/null
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 &>/dev/null
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 &>/dev/null
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2 &>/dev/null
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4 &>/dev/null
    update-alternatives --set python3 /usr/bin/python3.6 &>/dev/null
}

configure_firewall() {
    if command -v ufw &>/dev/null; then
        log_info "Configurando regras de firewall (UFW)..."
        ufw allow 443/tcp >/dev/null
        ufw allow 80/tcp >/dev/null
        ufw allow 3128/tcp >/dev/null
        ufw allow 8799/tcp >/dev/null
        ufw allow 8080/tcp >/dev/null
        log_success "Firewall configurado."
    fi
}

configure_welcome_message() {
    log_info "Configurando mensagem de boas-vindas no login..."
    # Adiciona comandos ao .bashrc para uma tela de login informativa
    cat > /root/.bashrc <<- "EOF"
clear
DATE=$(date +"%d-%m-%y")
TIME=$(date +"%T")
figlet -k SSH-PLUS | lolcat
echo -e ""
echo -e " NOME DO SERVIDOR : $HOSTNAME"
echo -e " SERVIDOR LIGADO √Ä : $(uptime -p)"
echo -e " DATA : $DATE"
echo -e " HORA : $TIME"
echo -e "\n\033[1;32m DIGITE (menu) PARA ACESSAR O PAINEL\033[0m."
echo -e ""
EOF
    log_success "Mensagem de boas-vindas configurada."
}

# --- FUN√á√ÉO PRINCIPAL (ORQUESTRA A INSTALA√á√ÉO) ---
main() {
    clear
    check_root
    
    figlet "SSH-PLUS" | lolcat
    print_separator
    echo -e "${C_BOLD}Bem-vindo ao instalador do SSH-PLUS! Este script est√° sendo atualizado...${C_OFF}"
    echo ""
    echo -e "${C_YELLOW}Sistemas Operacionais Suportados:${C_OFF}" | boxes -d simple
    printf " %-20s %s\n" "‚Ä¢ Ubuntu 18/20 x64" "üêß"
    printf " %-20s %s\n" "‚Ä¢ Debian 9/10/11 x64" "üêß"
    log_warning "Para melhor compatibilidade (V2Ray), use ${C_BOLD}Ubuntu 18.04 x64${C_OFF}."
    print_separator
    read -p "Pressione [Enter] para iniciar a instala√ß√£o..."
    
    clear
    install_dependencies
    define_obfuscated_vars
    verify_key
    prompt_user_database
    download_core_files
    
    clear
    log_info "Iniciando a fase final da configura√ß√£o. Isso pode levar alguns minutos."
    print_separator
    
    run_with_progress "Atualizando listas do sistema" "apt-get update -y"
    run_with_progress "Instalando pacotes base" "apt-get install -y bc screen nano unzip lsof net-tools dos2unix nload"
    run_with_progress "Otimizando ambiente Python" optimize_python_env
    run_with_progress "Finalizando defini√ß√µes" "chmod +x $_Ink/list"
    
    configure_firewall
    configure_welcome_message
    
    # Limpeza final
    rm -f $HOME/Plus $HOME/versao &>/dev/null
    cat /dev/null > ~/.bash_history && history -c
    
    clear
    figlet "Concluido!" | lolcat
    print_separator
    echo -e "${C_GREEN}${C_BOLD}A instala√ß√£o do SSH-PLUS foi conclu√≠da com sucesso!${C_OFF}" | boxes -d double -p a1c
    echo ""
    log_info "Para acessar o painel, digite o comando: ${C_CYAN}menu${C_OFF}"
    log_info "Para mais informa√ß√µes, contate-nos no Telegram: ${C_CYAN}@ALFAINTERNET${C_OFF}"
    echo ""
}

# --- PONTO DE ENTRADA DO SCRIPT ---
main