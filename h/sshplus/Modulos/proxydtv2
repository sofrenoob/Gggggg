#!/bin/bash

#================================================================================#
# SCRIPT DE GERENCIAMENTO DO DTPROXY
#================================================================================#

# Função para verificar e instalar pacotes essenciais de forma silenciosa
check_and_install_packages() {
    PACKAGES_TO_INSTALL=()
    if ! command -v wget &> /dev/null; then
        PACKAGES_TO_INSTALL+=("wget")
    fi
    if ! command -v screen &> /dev/null; then
        PACKAGES_TO_INSTALL+=("screen")
    fi
    if ! command -v dpkg-sig &> /dev/null; then
        PACKAGES_TO_INSTALL+=("dpkg-sig")
    fi


    if [ ${#PACKAGES_TO_INSTALL[@]} -ne 0 ]; then
        echo -e "\033[1;33mInstalando dependências necessárias (wget, screen, dpkg-sig)..."
        if command -v apt-get &> /dev/null; then
            apt-get update &>/dev/null
            apt-get install -y ${PACKAGES_TO_INSTALL[@]} &>/dev/null
        elif command -v yum &> /dev/null; then
            yum install -y ${PACKAGES_TO_INSTALL[@]} &>/dev/null
        fi
        echo -e "\033[1;32mDependências instaladas.\033[0m"
        sleep 1
    fi
}

# Função de instalação
install_dtproxy() {
    clear
    echo -e "\033[1;33mIniciando a instalação do PROXYDT V2 e suas dependências...\033[0m"
    
    # Instalação do libssl1.1
    echo -e "\033[1;33m[1/4] Baixando...\033[0m"
    wget -q -O libssl1.1.deb http://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.24_amd64.deb
    
    echo -e "\033[1;33m[2/4] Verificando e instalando...\033[0m"
    if dpkg-sig --verify libssl1.1.deb &>/dev/null; then
        dpkg -i libssl1.1.deb &>/dev/null
        apt-get install -f -y &>/dev/null
    fi
    
    # Download do binário DTproxy
    echo -e "\033[1;33m[3/4] Baixando o PROXYDT V2...\033[0m"
    wget -q -O /usr/bin/proxydt.2 https://github.com/sofrenoob/Gggggg/raw/main/mm/mm/proxydt.2
    
    # Limpeza
    echo -e "\033[1;33m[4/4] Finalizando e limpando...\033[0m"
    chmod +x /usr/bin/proxydt.2
    rm libssl1.1.deb &>/dev/null

    if [ -f "/usr/bin/proxydt.2" ]; then
        echo -e "\n\033[1;32mInstalação concluída com sucesso!\033[0m"
    else
        echo -e "\n\033[1;31mOcorreu um erro durante a instalação.\033[0m"
    fi
}

# Função para parar o serviço
stop_service() {
    clear
    echo -e "\033[1;33mParando o serviço PROXYDT V2...\033[0m"
    pkill -f "/usr/bin/proxydt.2"
    screen -S proxydt.2 -X quit &>/dev/null
    sleep 1
    echo -e "\033[1;32mServiço parado com sucesso!\033[0m"
}

# Função para desinstalar o DTproxy
uninstall_dtproxy() {
    clear
    echo -e "\E[41;1;37m        DESINSTALAR DTPROXY V2     \E[0m\n"
    read -p " Você tem certeza que deseja remover o PROXYDT V2? [s/N]: " CONFIRM
    
    if [[ "$CONFIRM" =~ ^[sS]$ ]]; then
        echo -e "\n\033[1;33mParando qualquer serviço ativo...\033[0m"
        stop_service >/dev/null 2>&1
        
        echo -e "\033[1;33mRemovendo arquivos...\033[0m"
        rm -f /usr/bin/proxydt.2
        
        sleep 1
        echo -e "\n\033[1;32mPROXYDT V2 desinstalado com sucesso!\033[0m"
        echo -e "\033[1;36mObs: A dependência 'libssl1.1' não foi removida pois pode ser usada por outros programas.\033[0m"
    else
        echo -e "\n\033[1;31mDesinstalação cancelada.\033[0m"
    fi
}


# Função para configurar e iniciar o serviço
configure_and_start() {
    clear
    echo -e "\E[44;1;37m         DTPROXY V2   by:@alfalemos         \E[0m\n"
    
    read -p " Digite a porta para o PROXYDT V2 (padrão: 80): " DT_PORT
    DT_PORT=${DT_PORT:-80}
    echo ""
    echo -e " Escolha o modo de operação:"
    echo -e " \033[1;33m1)\033[0m Proxy HTTP"
    echo -e " \033[1;33m2)\033[0m Proxy HTTP + OpenVPN"
    read -p " Opção [1-2] (padrão: 1): " -e -i 1 MODE_CHOICE
    echo ""
    read -p " Digite a mensagem de resposta (padrão: proxydt-v2-@alfalemos): " RESPONSE_MSG
    RESPONSE_MSG=${RESPONSE_MSG:-DTPROXY}

    pkill -f "/usr/bin/proxydt.2"
    screen -S proxydt.2 -X quit &>/dev/null
    sleep 1

    CMD="/usr/bin/proxydt.2 --port ${DT_PORT} --http --response ${RESPONSE_MSG}"
    if [ "$MODE_CHOICE" = "2" ]; then
        CMD="$CMD --openvpn-port"
    fi

    screen -dmS proxydt.2 ${CMD}

    sleep 2
    if screen -list | grep -q "proxydt.2"; then
        echo -e "\n\033[1;32mServiço PROXYDT V2 iniciado com sucesso!\033[0m"
    else
        echo -e "\n\033[1;31mErro ao iniciar o serviço PROXYDT V2.\033[0m"
    fi
}

# Menu Principal
main_menu() {
    while true; do
        clear
        echo -e "\E[44;1;37m         DTPROXY V2   by:@alfalemos         \E[0m"
        echo ""

        # Verifica e exibe o status atual
        PROCESS_CMD=$(ps aux | grep '/usr/bin/proxydt.2' | grep -v grep)
        if [ -n "$PROCESS_CMD" ]; then
            PORT=$(echo "$PROCESS_CMD" | grep -oP -- '--port \K[0-9]+')
            if echo "$PROCESS_CMD" | grep -q -- '--openvpn-port'; then
                MODE="HTTP + OPENVPN"
            else
                MODE="HTTP"
            fi
            printf " Status: \033[1;32m%-10s\033[0m Porta: \033[1;33m%-9s\033[0m Modo: \033[1;33m%s\033[0m\n" "ATIVO" "$PORT" "$MODE"
        else
            printf " Status: \033[1;31m%s\033[0m\n" "INATIVO"
        fi

        echo ""
        echo -e "\033[1;31m[\033[1;36m1\033[1;31m] \033[1;37m• \033[1;33mINICIAR / ALTERAR PROXYDT V2\033[0m"
        echo -e "\033[1;31m[\033[1;36m2\033[1;31m] \033[1;37m• \033[1;33mPARAR PROXYDT V2\033[0m"
        echo -e "\033[1;31m[\033[1;36m3\033[1;31m] \033[1;37m• \033[1;33mINSTALAR / ATUALIZAR PROXYDT V2\033[0m"
        echo -e "\033[1;31m[\033[1;36m4\033[1;31m] \033[1;37m• \033[1;31mDESINSTALAR PROXYDT V2\033[0m"
        echo -e "\033[1;31m[\033[1;36m0\033[1;31m] \033[1;37m• \033[1;33mSAIR DO SCRIPT\033[0m"
        echo ""
        read -p " --> Selecione uma opção: " option

        case $option in
            1)
                if [ ! -f "/usr/bin/proxydt.2" ]; then
                    echo -e "\n\033[1;31mPROXYDT V2 não instalado. Use a opção 3.\033[0m"; sleep 2
                else
                    configure_and_start; read -p $'\n Pressione [Enter] para continuar...'
                fi;;
            2)
                stop_service; read -p $'\n Pressione [Enter] para continuar...';;
            3)
                install_dtproxy; read -p $'\n Pressione [Enter] para continuar...';;
            4)
                uninstall_dtproxy; read -p $'\n Pressione [Enter] para continuar...';;
            0)
                clear; exit 0;;
            *)
                echo -e "\n\033[1;31mOpção inválida!\033[0m"; sleep 2;;
        esac
    done
}

#-- Início do Script --#
check_and_install_packages
main_menu