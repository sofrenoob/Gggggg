import os

# Função para instalar BADVPN
def install_badvpn():
    print("Instalando BADVPN...")
    os.system("sudo apt update && sudo apt install -y cmake build-essential")
    os.system("git clone https://github.com/ambrop72/badvpn.git")
    os.chdir("badvpn")
    os.system("cmake . && make && sudo make install")
    os.chdir("..")
    print("BADVPN instalado com sucesso!")

# Função para instalar Hysteria
def install_hysteria():
    print("Instalando Hysteria...")
    os.system("curl -fsSL https://get.hy2.io | bash")
    print("Hysteria instalado com sucesso!")

# Função para iniciar BADVPN
def start_badvpn(port, max_clients):
    print(f"Iniciando BADVPN na porta {port} com limite de {max_clients} conexões simultâneas...")
    os.system(f"badvpn-udpgw --listen-addr 0.0.0.0:{port} --max-clients {max_clients} &")
    print(f"BADVPN iniciado na porta {port}!")

# Função para iniciar Hysteria
def start_hysteria(port, protocol):
    print(f"Iniciando Hysteria na porta {port} com protocolo {protocol}...")
    os.system(f"hysteria server --listen :{port} --protocol {protocol} &")
    print(f"Hysteria iniciado na porta {port}!")

# Função para parar BADVPN
def stop_badvpn():
    print("Parando BADVPN...")
    os.system("pkill badvpn-udpgw")
    print("BADVPN foi parado com sucesso!")

# Função para parar Hysteria
def stop_hysteria():
    print("Parando Hysteria...")
    os.system("pkill hysteria")
    print("Hysteria foi parado com sucesso!")

# Função para configurar firewall para abrir portas
def open_port(port):
    print(f"Abrindo porta {port} no firewall...")
    os.system(f"sudo ufw allow {port}/udp")
    print(f"Porta {port} aberta com sucesso!")

# Função para alterar a quantidade máxima de conexões
def change_max_clients():
    max_clients = input("Digite o número máximo de conexões simultâneas (padrão: 1024): ") or "1024"
    print(f"Limite de conexões simultâneas alterado para {max_clients}.")
    return max_clients

# Função para escolher o protocolo do Hysteria
def choose_protocol():
    print("Escolha o protocolo para o Hysteria:")
    print("1. UDP")
    print("2. TCP")
    choice = input("Escolha uma opção (1 ou 2): ")
    if choice == "1":
        return "udp"
    elif choice == "2":
        return "tcp"
    else:
        print("Opção inválida! Usando UDP como padrão.")
        return "udp"

# Menu interativo
def menu():
    port = "7300"  # Porta padrão
    max_clients = "1024"  # Limite padrão de conexões simultâneas
    hysteria_protocol = "udp"  # Protocolo padrão do Hysteria

    while True:
        print("\n=== Menu BADVPN e Hysteria ===")
        print("1. Instalar BADVPN")
        print("2. Instalar Hysteria")
        print("3. Iniciar BADVPN")
        print("4. Parar BADVPN")
        print("5. Iniciar Hysteria")
        print("6. Parar Hysteria")
        print("7. Abrir Porta no Firewall")
        print("8. Alterar Limite de Conexões Simultâneas (BADVPN)")
        print("9. Escolher Protocolo do Hysteria")
        print("10. Sair")
        choice = input("Escolha uma opção: ")

        if choice == "1":
            install_badvpn()
        elif choice == "2":
            install_hysteria()
        elif choice == "3":
            port = input(f"Digite a porta para o BADVPN (padrão: {port}): ") or port
            start_badvpn(port, max_clients)
        elif choice == "4":
            stop_badvpn()
        elif choice == "5":
            port = input(f"Digite a porta para o Hysteria (padrão: {port}): ") or port
            start_hysteria(port, hysteria_protocol)
        elif choice == "6":
            stop_hysteria()
        elif choice == "7":
            port_to_open = input("Digite a porta que deseja abrir no firewall: ")
            open_port(port_to_open)
        elif choice == "8":
            max_clients = change_max_clients()
        elif choice == "9":
            hysteria_protocol = choose_protocol()
        elif choice == "10":
            print("Saindo...")
            break
        else:
            print("Opção inválida! Tente novamente.")

if __name__ == "__main__":
    menu()